<?php

use Drupal\Core\Access\AccessResult;
use Drupal\Core\Session\AccountInterface;
use Drupal\group_user_field_access\Controller\UserFieldAccessController;
use Drupal\group_user_field_access\Form\UserFieldAccessSettingsFrom;
use Drupal\Core\Form\FormStateInterface;

/**
 * Implements hook_entity_access().
 */
function group_user_field_access_user_access(AccountInterface $entity, $operation, AccountInterface $account) {
  switch ($operation) {
    case "view":
    case "update":
      $allow_to_edit_user = UserFieldAccessController::teamCoordinatorCanEditUser($entity, $account);

      if ($allow_to_edit_user) {
        return AccessResult::allowed();
      }
      break;
  }

  return AccessResult::allowed();
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function group_user_field_access_form_user_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  $user = Drupal::currentUser();

  if ($user->hasPermission('administer')) {
    return;
  }

  // Get user param from route.
  $edit_user = Drupal::routeMatch()->getParameter('user');

  if ($user->id() == $edit_user->id()) {
    return;
  }

  $allow_to_edit_user = UserFieldAccessController::teamCoordinatorCanEditUser($edit_user, $user);

  if (!$allow_to_edit_user) {
    return;
  }
  $edit_operation = FALSE;

  // Check that form submitted.
  if (isset($_REQUEST['op']) && $_REQUEST['op'] == $form['actions']['submit']['#value']) {
    $edit_operation = TRUE;
  }

  // Hide/remove account fields that user don't able to see.
  foreach (UserFieldAccessController::HIDDEN_ACCOUNT_FIELDS as $field) {
    if (isset($form['account'][$field])) {
      $form['account'][$field]['#access'] = FALSE;
    }
  }

  // Hide other fields that user don't able to see.
  foreach (UserFieldAccessController::HIDDEN_FIELDS as $field) {
    if (isset($form[$field])) {
      $form[$field]['#access'] = FALSE;
    }
  }

  foreach (UserFieldAccessController::READ_ONLY_ACCOUNT_FIELDS as $field) {
    if (isset($form['account'][$field])) {
      if (!$edit_operation) {
        $form['account'][$field]['#access'] = TRUE;

        $form['account'][$field]['#attributes'] = [
          'disabled' => 'disabled',
          'readonly' => 'readonly',
        ];
      }
      else {
        $form['account'][$field]['#access'] = FALSE;
      }
    }
  }

  foreach (UserFieldAccessController::READ_ONLY_FIELDS as $field) {
    if (isset($form[$field])) {
      $form['account']['#attributes'] = [
        'disabled' => 'disabled',
        'readonly' => 'readonly',
      ];
    }
  }

  // Get module settings for field access.
  $field_access_settings = UserFieldAccessSettingsFrom::getSettings();

  $editable_fields = $field_access_settings->get('editable_user_fields');

  if (!$editable_fields) {
    $editable_fields = [];
  }

  // Get list of user fields from /admin/config/people/accounts/fields page.
  $custom_account_fields = UserFieldAccessController::getUserAccountFields();

  // Hide custom field if it not exist in saved settings.
  foreach ($custom_account_fields as $custom_account_field => $custom_account_field_label) {
    if (!isset($editable_fields[$custom_account_field]) || (isset($editable_fields[$custom_account_field]) && $editable_fields[$custom_account_field] === 0)) {
      $form[$custom_account_field]['#access'] = FALSE;
    }
  }

  // Hide cancel account button.
  $form['actions']['delete']['#access'] = FALSE;

  // List of elements that not need to process.
  $form_exclude_elements = [
    'account',
    'form_id',
    'form_build_id',
    'form_token',
    'footer',
    'actions',
  ];

  // Hide other fields that not in lists.
  foreach ($form as $name => $el) {
    // Check if $name not from setting.
    if (strpos($name, '#') === FALSE) {
      if (in_array($name, $form_exclude_elements)) {
        continue;
      }

      if (!in_array($name, array_keys($custom_account_fields)) && !in_array($name, UserFieldAccessController::READ_ONLY_FIELDS) && !in_array($name, UserFieldAccessController::CAN_EDIT_FIELDS)) {
        $form[$name]['#access'] = FALSE;
      }
    }
  }
}
